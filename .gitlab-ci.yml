image: docker:stable

variables:
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASS: test-pass
  POSTGRES_DB: testdb
  MONGO_CONN: "mongodb://mongo/dataplatform"

stages:
  - build
  - deploy

run_tests:
  stage: build
  image: gitlab.oict.cz:4567/data-platform/devops/docker-node-env:latest
  services:
    - name: gitlab.oict.cz:4567/data-platform/devops/docker-postgis:10.5
      alias: postgres
    - mongo:4.0.5
  script:
    - yarn install
    - npm run build
    - mongorestore --uri=$MONGO_CONN -d dataplatform ./test/data/dataplatform
    - export LOG_LEVEL=INFO
    - export MONGO_CONN=$MONGO_CONN
    - export POSTGRES_CONN=postgres://$POSTGRES_USER:$POSTGRES_PASS@$POSTGRES_HOST/$POSTGRES_DB
    - cd node_modules/golemio-schema-definitions && npm run migrate-db && cd -
    - psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -f test/dump.sql
    - NODE_ENV=production npm run code-coverage
    - dredd

build_image_v1:
  stage: build
  script:
    - SANITIZED_BRANCH=${CI_COMMIT_REF_NAME//[^a-zA-Z0-9_]/}
    - echo $CI_COMMIT_SHA > commitsha
    - docker build -t $CI_REGISTRY_IMAGE/v1/$SANITIZED_BRANCH:$CI_PIPELINE_ID -t $CI_REGISTRY_IMAGE/v1/$SANITIZED_BRANCH:latest .

registry_deployment_v1:
  stage: deploy
  script:
    - SANITIZED_BRANCH=${CI_COMMIT_REF_NAME//[^a-zA-Z0-9_]/}
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/v1/$SANITIZED_BRANCH:$CI_PIPELINE_ID && docker push $CI_REGISTRY_IMAGE/v1/$SANITIZED_BRANCH:latest
  only:
    refs:
      - master
      - development

api_documentation_deployment_master:
  stage: deploy
  image: ruby:2.6
  script:
    - gem install apiaryio
    - P='<!-- __DATE__ -->';D='('`date '+%m\/%d\/%Y %H:%M'`' - v'$CI_PIPELINE_ID')';sed -i "s/$P/$D/g" docs/apiary_docs.apib
    - apiary publish --path="docs/apiary_docs.apib" --api-name="outputgateway"
  only:
    changes:
      - docs/apiary_docs.apib
    refs:
      - master
      
api_documentation_deployment_dev:
  stage: deploy
  image: ruby:2.6
  script:
    - gem install apiaryio
    - P='<!-- __DATE__ -->';D='('`date '+%m\/%d\/%Y %H:%M'`' - v'$CI_PIPELINE_ID')';sed -i "s/$P/$D/g" docs/apiary_docs.apib
    - apiary publish --path="docs/apiary_docs.apib" --api-name="outputgatewaydev"
  only:
    changes:
      - docs/apiary_docs.apib
    refs:
      - development

pages:
  stage: deploy
  script:
  - mkdir .public
  - cp -r docs/typedoc .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
    - master

