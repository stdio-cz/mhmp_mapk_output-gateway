image: docker:stable

variables:
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASS: test-pass
  POSTGRES_DB: testdb
  MONGO_CONN: "mongodb://mongo:27017/dataplatform"
  MONGO_TIMEOUT: 60000
  APIARY_NAME: 'golemioapi'
  APIARY_NAME_DEV: 'outputgatewaydev'
  HOST_URL: 'https://api.golemio.cz/v2'
  HOST_URL_DEV: 'http://rabin.golemio.cz/v2'

stages:
  - build
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

run_tests:
  stage: build
  image: registry.gitlab.com/operator-ict/golemio/devops/docker-node-env:latest
  services:
    - name: registry.gitlab.com/operator-ict/golemio/devops/docker-postgis/11.5:postgis2.5
      alias: postgres
    - mongo:4.0.5
    - redis:5.0-alpine
  script:
    - yarn
    - yarn run tslint
    - yarn run build
    - mongorestore --uri=$MONGO_CONN -d dataplatform ./db/example/mongo_data/dataplatform
    - export LOG_LEVEL=INFO
    - export MONGO_CONN=$MONGO_CONN
    - export POSTGRES_CONN=postgres://$POSTGRES_USER:$POSTGRES_PASS@$POSTGRES_HOST/$POSTGRES_DB
    - export SENTRY_ENABLE=false
    - cd node_modules/@golemio/schema-definitions && npm run migrate-db && cd -
    - psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -f db/example/sql_dump.sql
    - export REDIS_CONN=redis://redis/
    - redis-cli -h redis -x HSET files trip_updates.pb <db/example/trip_updates.pb.bin
    - redis-cli -h redis -x HSET files vehicle_positions.pb <db/example/vehicle_positions.pb.bin
    - NODE_ENV=production yarn run code-coverage
    - dredd

build_image_v2:
  stage: build
  script:
    - SANITIZED_BRANCH=`echo -n ${CI_COMMIT_REF_NAME//[^a-zA-Z0-9_-]/} | tr A-Z a-z`
    - echo $CI_COMMIT_SHA > commitsha
    - docker build -t $CI_REGISTRY_IMAGE/v2/$SANITIZED_BRANCH:$CI_PIPELINE_ID -t $CI_REGISTRY_IMAGE/v2/$SANITIZED_BRANCH:latest .

registry_deployment_v2:
  stage: deploy
  script:
    - SANITIZED_BRANCH=`echo -n ${CI_COMMIT_REF_NAME//[^a-zA-Z0-9_-]/} | tr A-Z a-z`
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/v2/$SANITIZED_BRANCH:$CI_PIPELINE_ID && docker push $CI_REGISTRY_IMAGE/v2/$SANITIZED_BRANCH:latest
  only:
    refs:
      - master
      - development

#APIARY
include:
  - remote: 'https://gitlab.com/operator-ict/golemio/devops/gitlab-ci-pipelines/raw/master/apiary.yml'

pages:
  stage: deploy
  image: node:12
  script:
  - yarn
  - npm run generate-docs
  - mv docs/typedoc public
  artifacts:
    paths:
    - public
  only:
    - master

