variables:
  DOCKER_REGISTRY_URL: gitlab.oict.cz:4567
  CONTAINER_IMAGE: $DOCKER_REGISTRY_URL/$CI_PROJECT_PATH
  MONGO_CONN: "-h localhost:27017"

stages:
  - build
  - test
  - deploy
  - clean

build_image:
  stage: build
  script:
    - docker build -t $CONTAINER_IMAGE:latest -t $CONTAINER_IMAGE:$CI_PIPELINE_ID .

run_tests:
  stage: test
  script:
    - mongorestore -d "output-$CI_PIPELINE_ID" ./test/data/dataplatform/
    - docker run $CONTAINER_IMAGE npm run code-coverage

registry_deployment:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY_URL
    - docker push $CONTAINER_IMAGE:latest && docker push $CONTAINER_IMAGE:$CI_PIPELINE_ID
    - docker logout $DOCKER_REGISTRY_URL
  only:
    refs:
      - master
      
production_deployment:
  stage: deploy
  script:
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$PRODUCTION_SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh gitlab@$PRODUCTION_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY_URL"
    - ssh gitlab@$PRODUCTION_IP "docker service update dp_output-gateway --with-registry-auth --image $CONTAINER_IMAGE:latest"
    - ssh gitlab@$PRODUCTION_IP "docker logout $DOCKER_REGISTRY_URL"
  only:
    refs:
      - master
      

remove_images:
  stage: clean
  script:
    - mongo --eval "db.dropDatabase()"
    - docker rmi $CONTAINER_IMAGE:$CI_PIPELINE_ID
  when: always
