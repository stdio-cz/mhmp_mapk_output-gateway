image: docker:stable

variables:
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASS: test-pass
  POSTGRES_DB: testdb
  MONGO_CONN: "mongodb://mongo/dataplatform"

stages:
  - test
  - build
  - deploy

run_tests:
  stage: test
  image: gitlab.oict.cz:4567/data-platform/node-mongo:latest
  services:
    - postgres:10.6
    - mongo:4.0.4
  script:
    - npm install
    - npm run build
    - mongorestore --uri=$MONGO_CONN -d dataplatform ./test/data/dataplatform
    - export LOG_LEVEL=INFO 
    - export MONGO_CONN=$MONGO_CONN 
    - export POSTGRES_CONN=postgres://$POSTGRES_USER:$POSTGRES_PASS@$POSTGRES_HOST/$POSTGRES_DB 
    - npm run code-coverage

build_image:
  stage: build
  script:
    - echo $CI_COMMIT_SHA > commitsha
    - docker build -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .

registry_deployment:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest && docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  only:
    refs:
      - master

api_documentation_deployment:
  stage: deploy
  image: apiaryio/client:latest
  script:
    - gem install apiaryio
    - apiary publish --path="docs/apiary_docs.apib" --api-name="outputgateway"
  only:
    changes:
      - docs/apiary_docs.apib
    refs:
      - master
